// Generated by Apple Swift version 4.2 (swiftlang-1000.11.37.1 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="EadsSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class ARAdView;
enum SplitError : NSInteger;

SWIFT_PROTOCOL("_TtP7EadsSDK12ARAdDelegate_")
@protocol ARAdDelegate
/// It will be called when loading ad process stops due to an error accured and it will notify you what error is.
/// \code
///     Here is the list errors can occure:
///         case Forbidden
///         case Unauthorized
///         case ServerError
///         case NetworkError
///         case NoInternetConnection
///         case NoResultFound
///
/// \endcode\param adView This is the view object trying to load ad.
///
/// \param error Type of error is occured
///
- (void)eadsAd:(ARAdView * _Nonnull)adView didCompleteWithError:(enum SplitError)error;
/// It will be called when loading ad process is finished.
/// \param adView This is the view object trying to load ad.
///
/// \param tag tag of the adView you assigned
///
/// \param contentAvailable states if ad is availble in the zone you requested for
///
- (void)eadsAd:(ARAdView * _Nonnull)adView ARAdDidFinishLoadWithTag:(NSInteger)tag contentAvailable:(BOOL)contentAvailable;
/// It will be called when the ad is going to be dismissed you.
/// \param adView This is the view object trying to load ad.
///
/// \param tag tag of the adView you assigned
///
///
/// returns:
/// You can decide base on your situation that view dismisses or not. by returning True, it will be dismissed. By returning False, You can call dismiss method manually whenever you want.
- (BOOL)eadsAd:(ARAdView * _Nonnull)adView willDismissWithTag:(NSInteger)tag SWIFT_WARN_UNUSED_RESULT;
/// It will be called when the ad is dismissed completely.
/// \param adView This is the view object trying to load ad.
///
/// \param tag tag of the adView you assigned
///
- (void)eadsAd:(ARAdView * _Nonnull)adView didDismissWithTag:(NSInteger)tag;
@end

enum ARBannerSize : NSInteger;
enum Zone : NSInteger;
@class NSCoder;

SWIFT_CLASS("_TtC7EadsSDK8ARAdView")
@interface ARAdView : UIView
/// Set ad delegate to receive status call backs
@property (nonatomic, strong) id <ARAdDelegate> _Nullable delegate;
@property (nonatomic, copy) void (^ _Nullable clicked)(void);
/// You should set the Banner Size and Zone you prefer for the Ad. Also, The frame should not be smaller than the Banner you selected and it wonâ€™t be displayed.
- (nonnull instancetype)initWithFrame:(CGRect)frame size:(enum ARBannerSize)size zone:(enum Zone)zone OBJC_DESIGNATED_INITIALIZER;
- (void)removeFromSuperview;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
/// This method should be called to fetch ad data and show.
- (void)execute;
/// This method will dismiss the adView forcely and the didDismiss delegate will be called. You can decide to close the view with animation or not.
- (void)dismissWithAnimatoin:(BOOL)animation;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, ARBannerSize, closed) {
/// The ad will be will have a width of 320 and height of 50
  ARBannerSizeBANNER_320x50 = 0,
/// The ad will be will have a width of 320 and height of 100
  ARBannerSizeBANNER_320x100 = 1,
/// The ad will be will have a width of 250 and height of 250
  ARBannerSizeBANNER_250x250 = 2,
/// The ad will be will have a width of 300 and height of 250
  ARBannerSizeBANNER_300x250 = 3,
  ARBannerSizeBANNERFIT = 4,
};

enum AREnvironment : NSInteger;

/// Required Configuration to start the ad service
SWIFT_CLASS("_TtC7EadsSDK8ARConfig")
@interface ARConfig : NSObject
@property (nonatomic, copy) NSString * _Nonnull appToken;
@property (nonatomic) enum AREnvironment environment;
- (nonnull instancetype)initWithAppToken:(NSString * _Nonnull)appToken environment:(enum AREnvironment)environment OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, AREnvironment, closed) {
  AREnvironmentSandbox = 0,
  AREnvironmentProduction = 1,
};


/// Thia ad view will display a full screen ad banner
SWIFT_CLASS("_TtC7EadsSDK22ARFullscreenBannerView")
@interface ARFullscreenBannerView : ARAdView
- (void)removeFromSuperview;
- (nonnull instancetype)initWithZone:(enum Zone)zone OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)execute;
- (void)dismissWithAnimatoin:(BOOL)animation;
- (nonnull instancetype)initWithFrame:(CGRect)frame size:(enum ARBannerSize)size zone:(enum Zone)zone SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7EadsSDK19ARFullscreenVideoAd")
@interface ARFullscreenVideoAd : ARAdView
- (nonnull instancetype)initWithZone:(enum Zone)zone cache:(BOOL)cache OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)removeFromSuperview;
- (void)layoutSubviews;
- (void)execute;
- (void)dismissWithAnimatoin:(BOOL)animation;
@property (nonatomic, copy) void (^ _Nullable viewCompleted)(void);
- (nonnull instancetype)initWithFrame:(CGRect)frame size:(enum ARBannerSize)size zone:(enum Zone)zone SWIFT_UNAVAILABLE;
@end


/// Thia ad view can be added to any type of container with specified banner size
SWIFT_CLASS("_TtC7EadsSDK18ARNativeBannerView")
@interface ARNativeBannerView : ARAdView
- (void)removeFromSuperview;
- (void)execute;
- (void)dismissWithAnimatoin:(BOOL)animation;
- (nonnull instancetype)initWithFrame:(CGRect)frame size:(enum ARBannerSize)size zone:(enum Zone)zone OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// Thia ad view will display a video ad banner and when the video finishes, it displays a regular ad banner afterwards.
SWIFT_CLASS("_TtC7EadsSDK15ARNativeVideoAd")
@interface ARNativeVideoAd : ARAdView
- (nonnull instancetype)initWithFrame:(CGRect)frame zone:(enum Zone)zone cache:(BOOL)cache OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)removeFromSuperview;
- (void)layoutSubviews;
- (void)execute;
- (void)dismissWithAnimatoin:(BOOL)animation;
- (nonnull instancetype)initWithFrame:(CGRect)frame size:(enum ARBannerSize)size zone:(enum Zone)zone SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7EadsSDK6EadsAd")
@interface EadsAd : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) ARConfig * _Nullable config;)
+ (ARConfig * _Nullable)config SWIFT_WARN_UNUSED_RESULT;
+ (void)setConfig:(ARConfig * _Nullable)value;
/// Should be added in didFinishLaunchingWithOptions in appdelegate. It will starts the service and prepares itâ€™s prerequisites.
+ (void)didLaunchWith:(ARConfig * _Nonnull)config;
+ (void)setPushTokenWithToken:(NSString * _Nonnull)token;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, SplitError, closed) {
  SplitErrorForbidden = 0,
  SplitErrorServerError = 1,
  SplitErrorNetworkError = 2,
  SplitErrorNoInternetConnection = 3,
};
static NSString * _Nonnull const SplitErrorDomain = @"EadsSDK.SplitError";







typedef SWIFT_ENUM(NSInteger, Zone, closed) {
/// System picks ads from any category
  ZoneAll = 0,
/// System picks ads from Books, Magazines, Newspapers or News Category
  ZoneBooks_Magazines_Newspapers_News = 1,
/// System picks ads from Music Category
  ZoneMusic = 2,
/// System picks ads from Business or Finance Category
  ZoneBusiness_Finance = 3,
/// System picks ads from Education Category
  ZoneEducation = 4,
/// System picks ads from Entertainment, Sports or Games Category
  ZoneEntertainment_Sports_Games = 5,
/// System picks ads from Food or Drink Category
  ZoneFood_Drink = 6,
/// System picks ads from Shopping Category
  ZoneShopping = 7,
/// System picks ads from Health, Fitness or Medical Category
  ZoneHealth_Fitness_Medical = 8,
/// System picks ads from Lifestyle Category
  ZoneLifestyle = 9,
/// System picks ads from Kids Category
  ZoneKids = 10,
/// System picks ads from Weather Category
  ZoneWeather = 11,
};

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
